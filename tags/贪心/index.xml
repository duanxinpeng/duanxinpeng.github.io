<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>贪心 on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/tags/%E8%B4%AA%E5%BF%83/</link>
    <description>Recent content in 贪心 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Jul 2020 18:42:12 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/%E8%B4%AA%E5%BF%83/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>零钱兑换</title>
      <link>http://localhost:1313/post/%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/</link>
      <pubDate>Mon, 20 Jul 2020 18:42:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/</guid>
      <description>问题描述 给定不同面额的硬币 coins 和一个总金额 amount。编写一个函数来计算可以凑成总金额所需的最少的硬币个数。如果没有任何一种硬币组合能组成总</description>
    </item>
    
    <item>
      <title>买卖股票的最佳时机</title>
      <link>http://localhost:1313/post/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</link>
      <pubDate>Sun, 19 Jul 2020 09:01:05 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</guid>
      <description>动态规划框架 状态转移方程 dp[i][k][0] = max(dp[i-1][k][0], dp[i-1][k][1] + prices[i]) dp[i][k][1] = max(dp[i-1][k][1], dp[i-1][k-1][0] - prices[i]) base case i=-1 and k = 0 dp[-1][k][0] = 0 : i = -1 表示第-1天，意味着还没开始 dp[-1][k][1] = -infinity ： 表示还没开始就已经持有股票，</description>
    </item>
    
    <item>
      <title>最长上升子序列</title>
      <link>http://localhost:1313/post/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</link>
      <pubDate>Fri, 17 Jul 2020 11:00:05 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</guid>
      <description>问题描述 给定一个无序的整数数组，找到其中最长上升子序列的长度 https://leetcode-cn.com/problems/longest-increasing-subsequence/ 动态规划 dp[i]代表以nums[i]结尾的最长上升子序列的长度，dp[i]=</description>
    </item>
    
    <item>
      <title>根据身高重建队列</title>
      <link>http://localhost:1313/post/%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97/</link>
      <pubDate>Fri, 17 Jul 2020 09:11:43 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97/</guid>
      <description>问题描述 根据数据大小以及数据位置（前面有几个比他大的元素）来重排这些元素 https://leetcode-cn.com/problems/queue-reconstruction-by-height/ 思路 相同身高的人，按照其所处位置排序 不同身高的人，应该先排身高高的</description>
    </item>
    
    <item>
      <title>任务调度器</title>
      <link>http://localhost:1313/post/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8/</link>
      <pubDate>Sun, 12 Jul 2020 15:13:03 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8/</guid>
      <description>问题描述 给定一个任务队列，每个任务都可以在1个单位时间内完成，但两个相同任务之间必须有长度为n的冷却时间，计算完成所有任务所需最短时间 https://leetcode-cn.com/problems/task-scheduler/ 思路</description>
    </item>
    
    <item>
      <title>跳跃游戏</title>
      <link>http://localhost:1313/post/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Thu, 09 Jul 2020 15:28:14 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid>
      <description>问题描述 给定一个数组，数组中的每个元素代表你能向前走的最大步数，如果你当前在数组的第一个位置，判断你能否达到数组的最后一个位置。 https://leetcode-cn.com/problems/jump-game/ 解题思路 我</description>
    </item>
    
  </channel>
</rss>