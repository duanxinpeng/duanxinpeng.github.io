<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>二叉搜索树 on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/tags/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link>
    <description>Recent content in 二叉搜索树 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 08 Jul 2020 08:51:38 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>验证二叉搜索树</title>
      <link>http://localhost:1313/post/%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link>
      <pubDate>Wed, 08 Jul 2020 08:51:38 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid>
      <description>题目描述 https://leetcode-cn.com/problems/validate-binary-search-tree/ 递归实现 我的想法是先判断左右子树是不是，在判断左孩子的最大元素是否小于根元素，最后判断有孩子的最小元素是否大于根元素，实现起来比较</description>
    </item>
    
    <item>
      <title>不同的二叉搜索树</title>
      <link>http://localhost:1313/post/%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</link>
      <pubDate>Wed, 08 Jul 2020 08:25:23 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</guid>
      <description>题目描述 https://leetcode-cn.com/problems/unique-binary-search-trees/ 解题时间 38 min 解题思路 中序遍历 递归 左右子树 官方解题 动态规划：动态规划思路是比较明确的，毕竟递归过程中做了太多重复性工作 卡特兰数：$C</description>
    </item>
    
  </channel>
</rss>