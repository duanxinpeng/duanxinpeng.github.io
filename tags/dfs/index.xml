<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dfs on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/tags/dfs/</link>
    <description>Recent content in dfs on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Jul 2020 08:52:10 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/dfs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>目标和</title>
      <link>http://localhost:1313/post/%E7%9B%AE%E6%A0%87%E5%92%8C/</link>
      <pubDate>Mon, 13 Jul 2020 08:52:10 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E7%9B%AE%E6%A0%87%E5%92%8C/</guid>
      <description>问题描述 给定一个非负数数组和一个目标和，对于数组中的任意一个元素，都可以选择在前面添加+或-，返回所有使数组和为目标和的所有符号添加方法数;</description>
    </item>
    
    <item>
      <title>二叉树的最近公共祖先</title>
      <link>http://localhost:1313/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</link>
      <pubDate>Sat, 11 Jul 2020 16:17:22 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</guid>
      <description>问题描述 给定一颗二叉树，找到该树种两个指定节点p和q的最近公共祖先 https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/ 我的思路 从root开始，一次判断每个节点是否同时包含节点p，q，重点是同</description>
    </item>
    
    <item>
      <title>课程表</title>
      <link>http://localhost:1313/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8/</link>
      <pubDate>Fri, 10 Jul 2020 20:10:04 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E8%AF%BE%E7%A8%8B%E8%A1%A8/</guid>
      <description>问题描述 给定课程总量以及他们的先决条件，请判断是否可能完成所有课程的学习。 https://leetcode-cn.com/problems/course-schedule/ 思路 死脑筋啊，题目说先决条件是边缘列表而不是邻接矩阵，我就觉得没</description>
    </item>
    
    <item>
      <title>岛屿数量</title>
      <link>http://localhost:1313/post/%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F/</link>
      <pubDate>Fri, 10 Jul 2020 18:40:43 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F/</guid>
      <description>问题描述 给定一个由0,1组成的二维表格，计算其中岛屿的数量 https://leetcode-cn.com/problems/number-of-islands/ 思路 深度优先搜索：用递归实现。 广度优先搜索：用队列实现。 并查集。 每做一次dfs，</description>
    </item>
    
  </channel>
</rss>