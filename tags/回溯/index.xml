<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>回溯 on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/tags/%E5%9B%9E%E6%BA%AF/</link>
    <description>Recent content in 回溯 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 15 Jul 2020 20:45:39 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/%E5%9B%9E%E6%BA%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>路径和3</title>
      <link>http://localhost:1313/post/%E8%B7%AF%E5%BE%84%E5%92%8C3/</link>
      <pubDate>Wed, 15 Jul 2020 20:45:39 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E8%B7%AF%E5%BE%84%E5%92%8C3/</guid>
      <description>问题描述 给定一棵在每个节点都存放着一个整数值的二叉树，找出路径和等于给定数值的路径总数。路径不需要从根节点开始，也不需要在叶子节点结束，但是</description>
    </item>
    
    <item>
      <title>单词搜索</title>
      <link>http://localhost:1313/post/%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Fri, 10 Jul 2020 09:44:18 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2/</guid>
      <description>问题描述 给定一个二维网格和一个单词，判断该单词是否出现在网格中 https://leetcode-cn.com/problems/word-search/ 思路 回溯 首先暴力找出所有和单词第一个字母相同的位置，然后利用回溯（DFS）寻</description>
    </item>
    
    <item>
      <title>子集</title>
      <link>http://localhost:1313/post/%E5%AD%90%E9%9B%86/</link>
      <pubDate>Fri, 10 Jul 2020 09:11:18 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%AD%90%E9%9B%86/</guid>
      <description>问题描述 给定一个不含重复元素的整数数组nums，返回该数组所有可能的子集 https://leetcode-cn.com/problems/subsets/ 思路 递归：具体的实现其实是用迭代实现的，而并非递归，但思路是递归的</description>
    </item>
    
    <item>
      <title>括号生成</title>
      <link>http://localhost:1313/post/%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</link>
      <pubDate>Thu, 09 Jul 2020 08:24:21 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</guid>
      <description>问题描述 生成所有的有效的n对括号的组合 https://leetcode-cn.com/problems/generate-parentheses/ 思路 抓住“回溯” 的思想就可以很简单地利用递归实现； 和“组合总和”的实现有点类似。</description>
    </item>
    
    <item>
      <title>组合</title>
      <link>http://localhost:1313/post/%E7%BB%84%E5%90%88/</link>
      <pubDate>Tue, 07 Jul 2020 00:11:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E7%BB%84%E5%90%88/</guid>
      <description>组合 问题描述 https://leetcode-cn.com/problems/combinations/submissions/ 收获 组合与排列的不同之处在于，组合只能向后看，排列是删除一个元素，组合是删除该元素以及该元素之前的所有元素！ 组合的另外一个不同</description>
    </item>
    
    <item>
      <title>全排列</title>
      <link>http://localhost:1313/post/%E5%85%A8%E6%8E%92%E5%88%97/</link>
      <pubDate>Mon, 06 Jul 2020 20:57:36 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%85%A8%E6%8E%92%E5%88%97/</guid>
      <description>字母大小全排列 题目描述 https://leetcode-cn.com/problems/letter-case-permutation/ 收获 StringBuilder的用法（append） foreach的用法 ArrayList是有序的而且可以用过下标i</description>
    </item>
    
  </channel>
</rss>