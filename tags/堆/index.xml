<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>堆 on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/tags/%E5%A0%86/</link>
    <description>Recent content in 堆 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 22 Jul 2020 17:54:09 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/%E5%A0%86/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数据流中的中位数</title>
      <link>http://localhost:1313/post/%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link>
      <pubDate>Wed, 22 Jul 2020 17:54:09 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid>
      <description>问题描述 https://leetcode-cn.com/problems/find-median-from-data-stream/ 实现思路 利用两个堆，一个大根堆low，存储前半部分数，一个小根堆high，存储后半部分数。 add(num): 1 2 3 4 5 6 if(low.size() &amp;gt; high.size()) low.offer(num) high.offer(low.poll()) else high.offer(num) low.offer(high.poll()) 进阶 如果数</description>
    </item>
    
    <item>
      <title>任务调度器</title>
      <link>http://localhost:1313/post/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8/</link>
      <pubDate>Sun, 12 Jul 2020 15:13:03 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8/</guid>
      <description>问题描述 给定一个任务队列，每个任务都可以在1个单位时间内完成，但两个相同任务之间必须有长度为n的冷却时间，计算完成所有任务所需最短时间 https://leetcode-cn.com/problems/task-scheduler/ 思路</description>
    </item>
    
    <item>
      <title>数组中的第K个最大元素</title>
      <link>http://localhost:1313/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</link>
      <pubDate>Sat, 11 Jul 2020 10:50:22 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACk%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/</guid>
      <description>问题描述 找出数组中第k大的数 快速选择算法 第K大的元素在nums中的下标是nums.length-k, 把k转换成index之后，就很简单了，i</description>
    </item>
    
    <item>
      <title>TopK问题</title>
      <link>http://localhost:1313/post/topk%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 05 Jul 2020 16:42:08 +0800</pubDate>
      
      <guid>http://localhost:1313/post/topk%E9%97%AE%E9%A2%98/</guid>
      <description>从N个数中找出最大的K个数 排序 O(NlogN) 冒泡排序 O(N*K) 小根堆 O(NlogK) 如果求最大k个数就用小根堆，如果求最小k个数就用大根堆 虽然不是最快的，但是却是最好的方式，</description>
    </item>
    
  </channel>
</rss>