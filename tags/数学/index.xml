<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数学 on Even - A super concise theme for Hugo</title>
    <link>http://localhost:1313/tags/%E6%95%B0%E5%AD%A6/</link>
    <description>Recent content in 数学 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Jul 2020 08:44:06 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/tags/%E6%95%B0%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>滑动窗口中位数</title>
      <link>http://localhost:1313/post/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E4%BD%8D%E6%95%B0/</link>
      <pubDate>Thu, 23 Jul 2020 08:44:06 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid>
      <description>问题描述 给定一个数组，以及一个窗口，求出窗口中的数字的中位数 https://leetcode-cn.com/problems/sliding-window-median/ 怎么求中位数 插入排序法 用一个 arraylist 存储窗口内的数字 每次去掉窗口尾的一个数据，并按照</description>
    </item>
    
    <item>
      <title>丑数系列</title>
      <link>http://localhost:1313/post/%E4%B8%91%E6%95%B0%E7%B3%BB%E5%88%97/</link>
      <pubDate>Wed, 22 Jul 2020 20:05:34 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E4%B8%91%E6%95%B0%E7%B3%BB%E5%88%97/</guid>
      <description>丑数 https://leetcode-cn.com/problems/ugly-number/ 判断一个数不是丑数难，但是判断一个数是否是丑数简单。 1 2 3 4 5 6 7 for i = 2,3,5 while(num % i == 0) num = num/i if(num == 1) return true; else return false; `` 丑数Ⅱ https://leetcode-cn.com/problems/ugly-number-ii/ 三指针法 超级丑数 https://leetcode-cn.com/problems/super-ugly-number/</description>
    </item>
    
    <item>
      <title>数据流中的中位数</title>
      <link>http://localhost:1313/post/%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link>
      <pubDate>Wed, 22 Jul 2020 17:54:09 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid>
      <description>问题描述 https://leetcode-cn.com/problems/find-median-from-data-stream/ 实现思路 利用两个堆，一个大根堆low，存储前半部分数，一个小根堆high，存储后半部分数。 add(num): 1 2 3 4 5 6 if(low.size() &amp;gt; high.size()) low.offer(num) high.offer(low.poll()) else high.offer(num) low.offer(high.poll()) 进阶 如果数</description>
    </item>
    
    <item>
      <title>完全平方数</title>
      <link>http://localhost:1313/post/%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</link>
      <pubDate>Fri, 17 Jul 2020 19:27:09 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</guid>
      <description>有效的完全平方数 https://leetcode-cn.com/problems/valid-perfect-square/ 二分查找 注意发生越界的情况，所以用 long 代替 int。 完全平方数 返回一个正整数最少可以由几个完全平方数构成 https://leetcode-cn.com/problems/perfect-squares/ 数学解法 如果满足$4</description>
    </item>
    
  </channel>
</rss>